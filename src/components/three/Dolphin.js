/*
auto-generated by: https://github.com/pmndrs/gltfjsx
author: mano1creative (https://sketchfab.com/mano1creative)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/3a7112396c7642df9201094a9b3634b0
title: Low Poly Dolphin
*/
import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'
import * as THREE from 'three';

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/scene.gltf', '../../../public/scene.bin')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      dolphin_ani: mixer.clipAction(animations[0], group.current),
    }
    actions.current.dolphin_ani.play()
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} onClick={(e) => actions.current.dolphin_ani.play()}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[410.45, 250.86, -358.22]} rotation={[Math.PI, -0.71, 2.71]} />
          <primitive object={nodes._rootJoint} />
          <group position={[-164, 28, -164]} rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[Math.PI / 2, 0, 0]} />
          </group>
          <group position={[220, 59.55, -34.95]} rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[Math.PI / 2, 0, 0]} />
          </group>
          <skinnedMesh
              attach="material" color="hotpink"
            material={materials.Dolphin}
            geometry={nodes.Mesh_Dolphin_0.geometry}
            skeleton={nodes.Mesh_Dolphin_0.skeleton}
          />

        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf', '../../../public/scene.bin')
